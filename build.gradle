buildscript {
    ext {
        kotlinVersion = '1.3.10'
        kotlinLoggingVersion = '1.5.3'
        springBootVersion = '2.1.0.RELEASE'
        kotlinLoggingVersion = '1.5.3'
        flywayVersion = '5.2.1'
        exposedVersion = '0.11.2'
        crnkVersion = '2.5.20180326220647'
        honeybadgerAppenderVersion = '1.5.4'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.20.1")
        classpath("gradle.plugin.org.jmailen.gradle:kotlinter-gradle:1.15.1")
        classpath("gradle.plugin.org.ec4j.gradle:editorconfig-gradle-plugin:0.0.3")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'
apply plugin: 'org.jmailen.kotlinter'
apply plugin: 'org.ec4j.editorconfig'

group = 'com.wbtcb'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url = 'https://jitpack.io' }
    maven { url = "https://dl.bintray.com/kotlin/exposed" }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE'
    }
}

dependencies {
    implementation("io.crnk:crnk-core:${crnkVersion}")
    implementation("io.crnk:crnk-spring:${crnkVersion}")
    implementation("io.crnk:crnk-client:${crnkVersion}")

    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-jdbc")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-amqp")
    runtime("com.fasterxml.jackson.module:jackson-module-kotlin")
    testImplementation("org.springframework.boot:spring-boot-starter-test")

    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("io.github.microutils:kotlin-logging:${kotlinLoggingVersion}")

    implementation("org.postgresql:postgresql")
    implementation("org.jetbrains.exposed:exposed:${exposedVersion}")
    implementation("org.jetbrains.exposed:spring-transaction:${exposedVersion}")
    implementation("org.flywaydb:flyway-core:${flywayVersion}")

    runtime("com.workable.honeybadger:honeybadger-logback-appender:${honeybadgerAppenderVersion}")
}

editorconfig {
    excludes = ['out/**', 'build/**']
}
check.dependsOn editorconfigCheck
